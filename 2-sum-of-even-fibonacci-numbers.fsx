(*
    Project Euler #2

    Even Fibonacci numbers
    --------------------
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 
*)

let isEven (num: uint) : bool =
    num % 2u = 0u

let fibonacciSeriesGenerator (limit: uint) : seq<uint> =
    Seq.unfold
        (fun (previous, current) ->
            if previous > limit then
                None
            else
                Some (previous, (current, previous + current))
        )
        (1u, 1u)

printf "Enter Fibonacci number value limit: "

let limit = System.UInt32.Parse(System.Console.ReadLine())

let timer = System.Diagnostics.Stopwatch.StartNew()

let sumOfEvenFibonacciNumbers =
    fibonacciSeriesGenerator limit
    |> Seq.filter isEven
    |> Seq.sum

timer.Stop()

printfn "Sum of even Fibonacci numbers less than %d is %d" limit sumOfEvenFibonacciNumbers
printfn "Time elapsed in milliseconds %f" timer.Elapsed.TotalMilliseconds

// The answer is 4613732
// Time needed 2.8444 milliseconds